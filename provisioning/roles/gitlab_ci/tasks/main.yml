---
- name: create gitlab user
  user: name={{ gitlab_ci_user }} comment="GitLab User" state=present

- name: add gitlab ci database
  mysql_db: name=gitlab_ci_production state=present encoding=utf8 collation=utf8_unicode_ci
  
- name: add gitlab ci mysql user
  mysql_user: name={{ gitlab_ci_db_user }} host={{ gitlab_ci_db_host }} password={{ gitlab_ci_db_password }} priv=gitlab_ci_production.*:ALL state=present
  
- name: checkout gitlab ci
  git: repo={{ gitlab_ci_repository }} dest={{ gitlab_ci_path }} version={{ gitlab_ci_version }}

- name: copy application conf
  template: src=application.yml.j2 dest={{ gitlab_ci_path }}/config/application.yml

- name: copy puma
  template: src=puma.rb.j2 dest={{ gitlab_ci_path }}/config/puma.rb

- name: copy database conf
  template: src=database.yml.j2 dest={{ gitlab_ci_path }}/config/database.yml

- name: create socket folder
  file: path={{ gitlab_ci_path }}/tmp/sockets/ owner={{ gitlab_ci_user }} state=directory mode=0775

- name: create pids folder
  file: path={{ gitlab_ci_path }}/tmp/pids/ owner={{ gitlab_ci_user }} state=directory mode=0700
  
- name: ensure bundler is installed
  command: gem install bundler

- name: bundle install gitlab ci gems
  command: bundle install --without development test postgres --deployment chdir={{ gitlab_ci_path }}

- name: setup gitlab ci tables
  shell: /usr/bin/yes "yes" | bundle exec rake db:setup RAILS_ENV=production chdir={{ gitlab_ci_path }}

- name: setup gitlab ci schedules
  shell: /usr/bin/yes "yes" | bundle exec whenever -w RAILS_ENV=production chdir={{ gitlab_ci_path }}

- name: set permissions
  file: path={{ gitlab_ci_path }} owner={{ gitlab_ci_user }} group={{ gitlab_ci_user }} recurse=yes

- name: copy init
  template: src=gitlab_ci.j2 dest=/etc/init.d/gitlab_ci mode=0755
  
- name: start gitlab_ci on boot
  action: command {{ item }} chdir=/etc/init.d/
  with_items:
    - update-rc.d gitlab_ci defaults 21
  notify: restart gitlab_ci
